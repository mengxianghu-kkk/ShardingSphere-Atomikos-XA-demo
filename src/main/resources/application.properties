server.port=8080
server.servlet.context-path=/xa-2pc-sharding

spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
# ????????? ???????data.sql ?? data-${platform}.sql,?spring.datasource.platform????
# schema.sql ??????? data.sql??????
#spring.datasource.initialization-mode=always
spring.jpa.properties.hibernate.jdbc.batch_size=1000
#spring.jpa.properties.hibernate.order_inserts=true

#spring.profiles.active=sharding-databases-tables


spring.shardingsphere.datasource.names=ds_0,ds_1

spring.shardingsphere.datasource.ds_0.jdbc-url=jdbc:mysql://localhost:3326/commerce_ds_0?serverTimezone=UTC&useSSL=false
spring.shardingsphere.datasource.ds_0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds_0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds_0.username=root
spring.shardingsphere.datasource.ds_0.password=root
spring.shardingsphere.datasource.ds_0.max-active=16

spring.shardingsphere.datasource.ds_1.jdbc-url=jdbc:mysql://localhost:3326/commerce_ds_1?serverTimezone=UTC&useSSL=false
spring.shardingsphere.datasource.ds_1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds_1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds_1.username=root
spring.shardingsphere.datasource.ds_1.password=root
spring.shardingsphere.datasource.ds_1.max-active=16

spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database_inline
spring.shardingsphere.rules.sharding.binding-tables=t_order,t_order_item

spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=ds_$->{0..1}.t_order_$->{0..15}
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=t_order_inline

spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=snowflake

spring.shardingsphere.rules.sharding.tables.t_order_item.actual-data-nodes=ds_$->{0..1}.t_order_item_$->{0..15}
spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-algorithm-name=t_order_item_inline

spring.shardingsphere.rules.sharding.tables.t_order_item.key-generate-strategy.column=order_item_id
spring.shardingsphere.rules.sharding.tables.t_order_item.key-generate-strategy.key-generator-name=snowflake

spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.props.algorithm-expression=ds_$->{((order_id % 32) >> 4) & 1 }
spring.shardingsphere.rules.sharding.sharding-algorithms.t_order_inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.t_order_inline.props.algorithm-expression=t_order_$->{order_id % 16}
spring.shardingsphere.rules.sharding.sharding-algorithms.t_order_item_inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.t_order_item_inline.props.algorithm-expression=t_order_item_$->{order_id % 16}

spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123

#????
spring.shardingsphere.props.sql-show=true
# ??bean?????bean?springboot????
spring.main.allow-bean-definition-overriding=true
